services:
  # Single shared PostgreSQL instance
  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres_admin
      # Create multiple databases and users
      POSTGRES_MULTIPLE_DATABASES: odoo_db1,odoo_db2
      POSTGRES_MULTIPLE_USERS: odoo1:odoo1_pass,odoo2:odoo2_pass
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-multiple-databases.sh:/docker-entrypoint-initdb.d/init-multiple-databases.sh:ro
    networks:
      - odoo_network
    ports:
      - "5432:5432"
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: "2"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  graphsync:
    image: ghcr.io/gldzzpro/graph_sync:latest
    ports:
      - "8000:8000"
    networks:
      - odoo_network
    deploy:
      resources:
        limits:
          memory: 500M
          cpus: "1"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

  neo4j_sync:
    image: ghcr.io/gldzzpro/neo4j_sync:latest
    ports:
      - "8001:8000"
    environment:
      - NEO4J_URI=${NEO4J_URI:-neo4j+s://6e0e193c.databases.neo4j.io}
      - NEO4J_USERNAME=${NEO4J_USERNAME:-neo4j}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD:-5EFKS7g0FDIbNCSexts91WZJfkufYSKxw6FcJPoZOro}
      - LOG_LEVEL=DEBUG
    depends_on:
      - graphsync
    networks:
      - odoo_network
    deploy:
      resources:
        limits:
          memory: 500M
          cpus: "1"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

networks:
  odoo_network:
    external: true

volumes:
  postgres-data: