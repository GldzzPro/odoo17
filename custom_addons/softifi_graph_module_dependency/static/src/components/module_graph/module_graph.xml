<?xml version="1.0" encoding="UTF-8"?>
<templates xml:space="preserve">
    <t t-name="module_graphe_template">
        <div class="o_module_graph">
            <div class="row">
                <div class="col-md-3">
                    <div class="module_graph_nav">
                        <div class="input-group mb-3">
                            <input type="text" class="form-control" placeholder="Search modules..."
                                t-on-keyup="onInputKeyup" />
                            <div class="input-group-append">
                                <span class="input-group-text">
                                    <i class="fa fa-search" />
                                </span>
                            </div>
                        </div>
                        <!-- Color Palette Configuration -->
                        <div class="card mb-3">
                            <div class="card-header">
                                <h5 class="mb-0">State Filter</h5>
                            </div>
                            <div class="card-body">
                                <div class="form-group" t-foreach="Object.keys(state.stateFilter)" t-as="stateType"
                                    t-key="stateType">
                                    <label>
                                        <span t-esc="stateType" class="mr-2" />
                                        <label class="switch">
                                            <input type="checkbox" t-att-checked="state.stateFilter[stateType]"
                                                t-on-change="onToggleState" t-att-data-state="stateType" />
                                            <span class="slider round" />
                                        </label>
                                    </label>
                                </div>
                            </div>
                        </div>
                        <ul class="list-group module_graph_nav_list">
                            <t t-foreach="filteredNodes" t-as="node" t-key="node.id">
                                <li t-att-class="isModuleSelected(node.id) ? 'list-group-item module_selected' : 'list-group-item'"
                                    t-att-data-id="node.id" t-att-data-label="node.label" t-on-click="onClickModule">
                                    <img t-att-src="node.icon" t-attf-class="rounded-circle o_object_fit_cover"
                                        width="24" height="24" />
                                    <label class="list-desc">
                                        <t t-esc="node.shortdesc" /> (
                                        <t t-esc="node.label" />)
                                    </label>
                                    <!-- Only display the color input when node.color exists -->
                                    <t t-if="isModuleInGraph(node.id)">
<input type="color" class="form-control form-control-sm"
    t-att-value="node.color" t-att-data-id="node.id"
    t-on-change="onChangeColor" t-on-click.stop="() => {}" />
                                    </t>
                                </li>

                            </t>
                        </ul>
                    </div>
                </div>


<div class="col-md-9">
    <div class="o_module_graph_controls mb-3">
        <div class="row mt-3">
            <div class="col-12 mb-2">
                <label class="mb-1 fw-bold">Dependency Direction:</label>
                <div class="btn-group" role="group" aria-label="Dependency Direction">
                    <button t-att-class="'btn ' + (state.direction === 'depends_on' ? 'btn-primary' : 'btn-outline-primary')"
                            t-on-click="() => this.setDirection('depends_on')">
                        Depends On
                    </button>
                    <button t-att-class="'btn ' + (state.direction === 'depended_by' ? 'btn-primary' : 'btn-outline-primary')"
                            t-on-click="() => this.setDirection('depended_by')">
                        Depended By
                    </button>
                </div>
            </div>
            <div class="col-12">
                <h5>Stop Conditions</h5>
                            </div>
<div class="col-md-2">
    <div class="form-group">
        <label class="mb-1">Limit Depth</label>
        <div class="form-check form-switch">
            <input class="form-check-input" type="checkbox" id="limitDepthSwitch"
                   t-att-checked="state.limitDepthEnabled"
                   t-on-change="() => { state.limitDepthEnabled = !state.limitDepthEnabled }" />
            <label class="form-check-label" for="limitDepthSwitch">
                Enable
            </label>
        </div>
    </div>
</div>
<div class="col-md-2">
    <div class="form-group">
        <label for="maxDepth">Max Edge Depth</label>
        <input type="number" class="form-control" id="maxDepth"
               t-att-value="state.maxDepth"
               t-on-change="onChangeMaxDepth"
               min="0"
               t-att-disabled="!state.limitDepthEnabled" />
        <small class="text-muted">0 = root only, 1 = 1 edge, etc.</small>
    </div>
</div>
                            <div class="col-md-7">
                                <div class="module-filters" t-on-click-outside="onClickOutside">
                                    <div class="d-flex mb-3">
                                        <!-- State Dropdown -->
                                        <div class="dropdown me-2" t-ref="dropdownState">
                                            <button class="btn btn-outline-secondary dropdown-toggle"
                                                t-on-click="() => this.toggleDropdown('state')">
                                                <span>States</span>
                                                <t t-if="state.selectedStates.length > 0">
                                                    <span class="badge bg-primary ms-2">
                                                        <t t-esc="state.selectedStates.length" />
                                                    </span>
                                                </t>
                                            </button>

                                            <div t-if="state.stateDropdownOpen" class="dropdown-menu show p-2"
                                                style="min-width: 250px;">
                                                <div
                                                    class="dropdown-header d-flex justify-content-between align-items-center">
                                                    <span>Filter by States</span>
                                                    <button t-if="state.selectedStates.length > 0"
                                                        class="btn btn-sm btn-link text-danger"
                                                        t-on-click="() => this.clearSelections('state')">
                                                        <i class="fa fa-times" /> Clear
                                                    </button>
                                                </div>

                                                <!-- Filter Mode Toggle -->
                                                <div class="mb-2 d-flex justify-content-center">
                                                    <div class="btn-group btn-group-sm">
                                                        <button
                                                            t-att-class="'btn ' + (state.stateFilterMode ? 'btn-primary' : 'btn-outline-primary')"
                                                            t-on-click="() => { state.stateFilterMode = true; this.updateDomain(); }">
                                                            is one of
                                                        </button>
                                                        <button
                                                            t-att-class="'btn ' + (!state.stateFilterMode ? 'btn-primary' : 'btn-outline-primary')"
                                                            t-on-click="() => { state.stateFilterMode = false; this.updateDomain(); }">
                                                            is not one of
                                                        </button>
                                                    </div>
                                                </div>

                                                <div class="dropdown-divider"></div>
                                                <div class="filter-options">
                                                    <t t-foreach="Array.from(state.availableStates.entries())"
                                                        t-as="stateEntry" t-key="stateEntry[0]">
                                                        <div
                                                            class="form-check d-flex justify-content-between align-items-center">
                                                            <div>
                                                                <input type="checkbox" class="form-check-input"
                                                                    t-att-id="'state-' + stateEntry[0]"
                                                                    t-att-checked="state.selectedStates.includes(stateEntry[0])"
                                                                    t-on-change="() => this.toggleSelection('state', stateEntry[0])" />
                                                                <label class="form-check-label"
                                                                    t-att-for="'state-' + stateEntry[0]">
                                                                    <t t-esc="stateEntry[0]" />
                                                                </label>
                                                            </div>
                                                            <span class="badge bg-secondary">
                                                                <t t-esc="stateEntry[1]" />
                                                            </span>
                                                        </div>
                                                    </t>
                                                </div>
                                            </div>
                                        </div>

                                        <!-- Category Dropdown -->
                                        <div class="dropdown" t-ref="dropdownCategory">
                                            <button class="btn btn-outline-secondary dropdown-toggle"
                                                t-on-click="() => this.toggleDropdown('category')">
                                                <span>Categories</span>
                                                <t t-if="state.selectedCategories.length > 0">
                                                    <span class="badge bg-primary ms-2">
                                                        <t t-esc="state.selectedCategories.length" />
                                                    </span>
                                                </t>
                                            </button>

                                            <div t-if="state.categoryDropdownOpen" class="dropdown-menu show p-2"
                                                style="min-width: 250px;">
                                                <div
                                                    class="dropdown-header d-flex justify-content-between align-items-center">
                                                    <span>Filter by Categories</span>
                                                    <button t-if="state.selectedCategories.length > 0"
                                                        class="btn btn-sm btn-link text-danger"
                                                        t-on-click="() => this.clearSelections('category')">
                                                        <i class="fa fa-times" /> Clear
                                                    </button>
                                                </div>

                                                <!-- Filter Mode Toggle -->
                                                <div class="mb-2 d-flex justify-content-center">
                                                    <div class="btn-group btn-group-sm">
                                                        <button
                                                            t-att-class="'btn ' + (state.categoryFilterMode ? 'btn-primary' : 'btn-outline-primary')"
                                                            t-on-click="() => { state.categoryFilterMode = true; this.updateDomain(); }">
                                                            is one of
                                                        </button>
                                                        <button
                                                            t-att-class="'btn ' + (!state.categoryFilterMode ? 'btn-primary' : 'btn-outline-primary')"
                                                            t-on-click="() => { state.categoryFilterMode = false; this.updateDomain(); }">
                                                            is not one of
                                                        </button>
                                                    </div>
                                                </div>

                                                <div class="dropdown-divider"></div>
                                                <div class="filter-options"
                                                    style="max-height: 300px; overflow-y: auto;">
                                                    <t t-foreach="Array.from(state.availableCategories.entries())"
                                                        t-as="categoryEntry" t-key="categoryEntry[0]">
                                                        <div
                                                            class="form-check d-flex justify-content-between align-items-center">
                                                            <div>
                                                                <input type="checkbox" class="form-check-input"
                                                                    t-att-id="'category-' + categoryEntry[0]"
                                                                    t-att-checked="state.selectedCategories.includes(categoryEntry[0])"
                                                                    t-on-change="() => this.toggleSelection('category', categoryEntry[0])" />
                                                                <label class="form-check-label"
                                                                    t-att-for="'category-' + categoryEntry[0]">
                                                                    <t t-esc="categoryEntry[1].name" />
                                                                </label>
                                                            </div>
                                                            <span class="badge bg-secondary">
                                                                <t t-esc="categoryEntry[1].count" />
                                                            </span>
                                                        </div>
                                                    </t>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <!-- Application Filter Chips -->
                                    <div class="application-filter mb-3">
                                        <div class="d-flex gap-2">
                                            <button
                                                t-att-class="'btn btn-sm ' + (state.applicationFilter === null ? 'btn-primary' : 'btn-outline-primary')"
                                                t-on-click="() => this.setApplicationFilter(null)">
                                                All
                                                <span class="badge bg-white text-primary ms-1">
                                                    <t t-esc="state.nodes.length" />
                                                </span>
                                            </button>

                                            <button
                                                t-att-class="'btn btn-sm ' + (state.applicationFilter === true ? 'btn-success' : 'btn-outline-success')"
                                                t-on-click="() => this.setApplicationFilter(true)">
                                                Applications
                                                <span class="badge bg-white text-success ms-1">
                                                    <t t-esc="this.getApplicationFilterCount(true)" />
                                                </span>
                                            </button>

                                            <button
                                                t-att-class="'btn btn-sm ' + (state.applicationFilter === false ? 'btn-info' : 'btn-outline-info')"
                                                t-on-click="() => this.setApplicationFilter(false)">
                                                Modules
                                                <span class="badge bg-white text-info ms-1">
                                                    <t t-esc="this.getApplicationFilterCount(false)" />
                                                </span>
                                            </button>
                                            <!-- <button
                                                t-att-class="'btn btn-sm ' + (state.moduleTypeFilter === null ? 'btn-primary' : 'btn-outline-primary')"
                                                t-on-click="() => this.setModuleTypeFilter(null)">
                                                All
                                                <span class="badge bg-white text-primary ms-1">
                                                    <t t-esc="state.nodes.length" />
                                                </span>
                                            </button>

                                            <button
                                                t-att-class="'btn btn-sm ' + (state.applicationFilter === 'official' ? 'btn-success' : 'btn-outline-success')"
                                                t-on-click="() => this.setModuleTypeFilter('official')">
                                                Official Apps
                                                <span class="badge bg-white text-success ms-1">
                                                    <t t-esc="this.getModuleTypeFilterCount('official')" />
                                                </span>
                                            </button>

                                            <button
                                                t-att-class="'btn btn-sm ' + (state.applicationFilter === 'industries' ? 'btn-info' : 'btn-outline-info')"
                                                t-on-click="() => this.setModuleTypeFilter('industries')">
                                                industries
                                                <span class="badge bg-white text-info ms-1">
                                                    <t t-esc="this.getApplicationFilterCount('industries')" />
                                                </span>
                                            </button> -->
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-4">
                                <!-- Active Filters Display -->
                                <div t-if="state.selectedStates.length > 0 || state.selectedCategories.length > 0 || state.applicationFilter !== null"
                                    class="active-filters mb-3">
                                    <span class="text-muted me-2">Active filters:</span>

                                    <!-- State filters -->
                                    <t t-if="state.selectedStates.length > 0">
                                        <span class="badge bg-light text-dark me-2">
                                            State
                                            <t t-esc="state.stateFilterMode ? 'is one of' : 'is not one of'" />:
                                        </span>
                                        <t t-foreach="state.selectedStates" t-as="stateName" t-key="stateName">
                                            <span class="badge bg-primary me-1">
                                                <t t-esc="stateName" />
                                                <i class="fa fa-times ms-1"
                                                    t-on-click="() => this.toggleSelection('state', stateName)" />
                                            </span>
                                        </t>
                                    </t>

                                    <!-- Category filters -->
                                    <t t-if="state.selectedCategories.length > 0">
                                        <span class="badge bg-light text-dark me-2">
                                            Category
                                            <t t-esc="state.categoryFilterMode ? 'is one of' : 'is not one of'" />:
                                        </span>
                                        <t t-foreach="state.selectedCategories" t-as="categoryId" t-key="categoryId">
                                            <span class="badge bg-info text-dark me-1">
                                                <t t-esc="state.availableCategories.get(categoryId).name" />
                                                <i class="fa fa-times ms-1"
                                                    t-on-click="() => this.toggleSelection('category', categoryId)" />
                                            </span>
                                        </t>
                                    </t>

                                    <!-- Application filter -->
                                    <t t-if="state.applicationFilter !== null">
                                        <span class="badge bg-light text-dark me-2">
                                            Type:
                                        </span>
                                        <span
                                            t-att-class="'badge me-1 ' + (state.applicationFilter ? 'bg-success' : 'bg-info')">
                                            <t t-esc="state.applicationFilter ? 'Applications' : 'Modules'" />
                                            <i class="fa fa-times ms-1"
                                                t-on-click="() => this.setApplicationFilter(null)" />
                                        </span>
                                    </t>
                                </div>
                            </div>
                        </div>

                        <div class="row mt-3">
                            <div class="col-md-12">
                                <!-- Domain Display (for debugging) -->
                                <div style="width: 100%;" class="mb-3 text-muted small" t-if="state.domain.length > 0">
                                    <strong>Stop Condition Domain:</strong>
                                    <t t-esc="this.stringifyDomain()" />
                                </div>
                                <button class="btn btn-danger" t-on-click="onClearGraph">clear graph</button>
                                <button class="btn btn-secondary ml-2" t-on-click="clearStopConditions">
                                    Clear Stop Conditions
                                </button>
                            </div>
                        </div>
                    </div>
                    <div class="row mb-2">
    <div class="col-12">
        <div class="selected-modules-chips d-flex flex-row overflow-auto gap-2 p-2 border rounded">
            <t t-if="selectedModuleObjects.length === 0">
                <span class="text-muted">No modules selected</span>
            </t>
            <t t-foreach="selectedModuleObjects" t-as="module" t-key="module.id">
<div class="badge d-flex align-items-center p-2"
     t-att-style="'background-color: ' + (module.color || '#007bff') + '; color: white;'">
    <span class="me-2"><t t-esc="module.shortdesc"/> (<t t-esc="module.name"/>)</span>
    <i class="fa fa-times cursor-pointer" t-on-click="() => this.removeSelectedModule(module.id)"></i>
</div>
            </t>
        </div>
    </div>
</div>
<div class="module_graph_container border" t-ref="graph" style="height: 600px;" />
                </div>
            </div>
        </div>
    </t>
</templates>
