name: Build and Run Odoo Containers

on:
  pull_request:
    branches:
      - main
      - 'branch-*'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set PR ID as tag
        id: vars
        run: echo "tag=fb-pr-${{ github.event.number }}" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ steps.vars.outputs.tag }}

  run-containers:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Run Postgres container
        run: |
          docker run -d \
            --name postgres \
            -e POSTGRES_USER=postgres \
            -e POSTGRES_PASSWORD=postgres_admin \
            -e POSTGRES_DB=postgres \
            -p 5432:5432 \
            postgres:15

          echo "Waiting for Postgres to be ready..."
          sleep 10

      - name: List GHCR tags and run containers
        env:
          GHCR_OWNER: my-org
          IMAGE_NAME: my-app
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TOKEN=$GH_TOKEN
          IMAGE_PREFIX="ghcr.io/gldzzpro/odoo17"
          DEFAULT_PASS="odoo_pass"

          tags=$(curl -s -H "Authorization: Bearer $TOKEN" \
                      -H "Accept: application/vnd.github.v3+json" \
                      "https://api.github.com/user/packages/container/odoo17/versions" \
                | jq -r '.[].metadata.container.tags[]? | select(startswith("fb-"))')

          for tag in $tags; do
              dbname="db_${tag//-/_}"
              dbuser="user_${tag//-/_}"
              dbpass="$DEFAULT_PASS"

              echo "Creating DB and user in Postgres for tag $tag..."
              docker exec -i postgres psql -U postgres <<EOF
          DO
          \$do\$
          BEGIN
            IF NOT EXISTS (SELECT FROM pg_database WHERE datname = '$dbname') THEN
                CREATE DATABASE $dbname;
            END IF;
          END
          \$do\$;

          DO
          \$do\$
          BEGIN
            IF NOT EXISTS (SELECT FROM pg_roles WHERE rolname = '$dbuser') THEN
                CREATE USER $dbuser WITH PASSWORD '$dbpass';
                GRANT ALL PRIVILEGES ON DATABASE $dbname TO $dbuser;
            END IF;
          END
          \$do\$;
          EOF

                        echo "Running Odoo container for tag $tag"
                        docker run -d \
                          --name "odoo_$tag" \
                          --link postgres:postgres \
                          "$IMAGE_PREFIX:$tag" \
                          -- \
                          --db_host=postgres \
                          --db_port=5432 \
                          --db_user=$dbuser \
                          --db_password=$dbpass \
                          --database=$dbname \
                          -i base,softifi_graph_module_dependency \
                          --http-interface=0.0.0.0 \
                          --proxy-mode
                    done

                    sleep 10
                    docker ps
